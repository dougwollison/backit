#!/usr/bin/env python3
import time
import os
import sys
import subprocess
from glob import glob
from shared import config, option as testing

filter = config.get( 'rsync', 'filter' )
log_file = config.get( 'rsync', 'log_file' )
connection = config.get( 'rsync', 'connection' )
source_base = os.path.realpath( config.get( 'rsync', 'source_base', fallback='/' ) )
target_base = os.path.realpath( config.get( 'rsync', 'target_base' ) )

timestamp = time.strftime( '%Y.%m.%d_%H.%M.%S' )
backup_directory = target_base + '/' + timestamp
linkref_directory = target_base + '/latest'

# Build the rsync command
command = [
	'/usr/bin/rsync',
	'-vvhrtplHP',
	'-e', 'ssh',
	'--rsync-path', 'sudo rsync',
	'--filter', '. ' + filter,
	'--log-file', log_file,
]

# If test flag is present, do a dry run
if testing :
	command.append( '--dry-run' )

# If the /latest link exists, add flags for incremental backup
if os.path.exists( linkref_directory ) :
	command = command + [
		'--delete',
		'--delete-excluded',
		'--link-dest', linkref_directory
	]

# Add the source and destination
command.append( connection + ':' + source_base )
command.append( backup_directory )

# Create the backup directory
if not testing :
	os.makedirs( backup_directory )

# Execute the rsync command
subprocess.call( command )

# Clean up
if not testing :
	# Remove the previous /latest link
	if os.path.exists( linkref_directory ) :
		os.unlink( linkref_directory )

	# Add the new /latest link, moving to the parent folder to ensure it's relative
	start = os.getcwd()
	os.chdir( target_base )
	os.symlink( os.path.basename( backup_directory ), 'latest' )
	os.chdir( start )
